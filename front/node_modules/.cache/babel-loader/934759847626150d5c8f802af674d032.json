{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totof\\\\Documents\\\\LaCapsule\\\\Semaine6-react\\\\MorningNews\\\\morningnews-part1-setup\\\\src\\\\ScreenArticlesBySource.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Card, Icon, Modal, Button } from 'antd';\nimport Nav from './Nav';\nconst {\n  Meta\n} = Card;\n\nfunction ScreenArticlesBySource(props) {\n  const idSource = props.match.params.id;\n  const [articleList, setArticleList] = useState([]);\n  const [visible, setVisible] = useState(false); // Visibilité de la modal\n\n  useEffect(() => {\n    async function loadArticles() {\n      // On interroge l'api pour récup la liste des sources\n      const rawResponse = await fetch(`https://newsapi.org/v2/top-headlines?sources=${idSource}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\n      const response = await rawResponse.json();\n      setArticleList(response.articles);\n    }\n\n    loadArticles();\n  }, []);\n\n  let showModal = () => {\n    setVisible(!visible);\n  };\n\n  let closeModal = () => {\n    setVisible(!visible);\n  };\n\n  let listArticles = articleList.map((article, i) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: i,\n      style: {\n        width: 300,\n        margin: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n      },\n      cover: React.createElement(\"img\", {\n        alt: article.title,\n        src: article.urlToImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }),\n      actions: [React.createElement(Icon, {\n        onClick: showModal,\n        type: \"read\",\n        key: \"ellipsis2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"like\",\n        key: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: article.title,\n      description: article.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: article.title,\n      visible: visible,\n      onOk: closeModal,\n      onCancel: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, article.content)));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, listArticles));\n}\n\nexport default ScreenArticlesBySource;","map":{"version":3,"sources":["C:/Users/Totof/Documents/LaCapsule/Semaine6-react/MorningNews/morningnews-part1-setup/src/ScreenArticlesBySource.js"],"names":["React","useState","useEffect","Card","Icon","Modal","Button","Nav","Meta","ScreenArticlesBySource","props","idSource","match","params","id","articleList","setArticleList","visible","setVisible","loadArticles","rawResponse","fetch","response","json","articles","showModal","closeModal","listArticles","map","article","i","display","justifyContent","width","margin","flexDirection","title","urlToImage","description","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Card, Icon, Modal, Button } from 'antd';\r\nimport Nav from './Nav'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction ScreenArticlesBySource(props) {\r\n\r\n  const idSource = props.match.params.id\r\n\r\n  const [articleList, setArticleList] = useState([]);\r\n\r\n  const [visible, setVisible] = useState(false); // Visibilité de la modal\r\n\r\n\r\n  useEffect(() => {\r\n    async function loadArticles() {\r\n      // On interroge l'api pour récup la liste des sources\r\n      const rawResponse = await fetch(`https://newsapi.org/v2/top-headlines?sources=${idSource}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\r\n      const response = await rawResponse.json();\r\n      setArticleList(response.articles);\r\n\r\n    }\r\n    loadArticles();\r\n  }, []);\r\n\r\n  let showModal = () => {\r\n    setVisible(!visible);\r\n  }\r\n\r\n  let closeModal = () => {\r\n    setVisible(!visible);\r\n  }\r\n\r\n  let listArticles = articleList.map((article, i) => {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Card key={i}\r\n          style={{\r\n            width: 300,\r\n            margin: '15px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between'\r\n          }}\r\n          cover={\r\n            <img\r\n              alt={article.title}\r\n              src={article.urlToImage}\r\n            />\r\n          }\r\n          actions={[\r\n            <Icon onClick={showModal} type=\"read\" key=\"ellipsis2\" />,\r\n\r\n            <Icon type=\"like\" key=\"ellipsis\" />\r\n          ]}\r\n        >\r\n          <Meta\r\n            title={article.title}\r\n            description={article.description}\r\n          />\r\n\r\n        </Card>\r\n        <Modal\r\n          title={article.title}\r\n          visible={visible}\r\n          onOk={closeModal}\r\n          onCancel={closeModal}\r\n        >\r\n          <p>{article.content}</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Nav />\r\n\r\n      <div className=\"Banner\" />\r\n\r\n      <div className=\"Card\">\r\n\r\n        {listArticles}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenArticlesBySource;\r\n"]},"metadata":{},"sourceType":"module"}
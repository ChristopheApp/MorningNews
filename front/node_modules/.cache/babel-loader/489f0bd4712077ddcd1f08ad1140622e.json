{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totof\\\\Documents\\\\LaCapsule\\\\Semaine6-react\\\\MorningNews\\\\part4\\\\front\\\\src\\\\ScreenArticlesBySource.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Card, Icon, Modal } from 'antd';\nimport Nav from './Nav';\nimport { connect } from 'react-redux';\nconst {\n  Meta\n} = Card;\n\nfunction ScreenArticlesBySource(props) {\n  const idSource = props.match.params.id;\n  const [articleList, setArticleList] = useState([]);\n  const [visible, setVisible] = useState(false); // Visibilité de la modal\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    async function loadArticles() {\n      // On interroge l'api pour récup la liste des sources\n      const rawResponse = await fetch(`https://newsapi.org/v2/top-headlines?sources=${idSource}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\n      const response = await rawResponse.json();\n      setArticleList(response.articles);\n    }\n\n    loadArticles(); // eslint-disable-next-line\n  }, []);\n\n  async function addToWishList(article) {\n    console.log(props.userToken); // console.log(JSON.stringify(article + props.userToken))\n    // var userData = JSON.stringify({\n    //   firstName: valeur du firstName (état ou props),\n    //   lastName: valeur du lastName (état ou props),\n    //   email: valeur de email (état ou props),\n    //   password: valeur de password (état ou props)\n    // });\n    // let data = await fetch('/add-article', {\n    //   method: 'POST',\n    //   headers: {'Content-Type':'application/Json'},\n    //   body: userData\n    // })\n\n    props.addToWishList(article);\n  }\n\n  let showModal = (title, content) => {\n    setVisible(!visible);\n    setTitle(title);\n    setContent(content);\n  };\n\n  let closeModal = () => {\n    setVisible(!visible);\n  };\n\n  let listArticles = articleList.map((article, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: i,\n      style: {\n        width: 300,\n        margin: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n      },\n      cover: React.createElement(\"img\", {\n        alt: article.title,\n        src: article.urlToImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      actions: [React.createElement(Icon, {\n        onClick: () => showModal(article.title, article.content),\n        type: \"read\",\n        key: \"ellipsis2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        onClick: () => addToWishList(article),\n        type: \"like\",\n        key: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: article.title,\n      description: article.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: title,\n      visible: visible,\n      onOk: closeModal,\n      onCancel: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, content)));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, listArticles));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.userToken\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToWishList: function (article) {\n      dispatch({\n        type: 'addArticle',\n        article: article\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenArticlesBySource);","map":{"version":3,"sources":["C:/Users/Totof/Documents/LaCapsule/Semaine6-react/MorningNews/part4/front/src/ScreenArticlesBySource.js"],"names":["React","useState","useEffect","Card","Icon","Modal","Nav","connect","Meta","ScreenArticlesBySource","props","idSource","match","params","id","articleList","setArticleList","visible","setVisible","title","setTitle","content","setContent","loadArticles","rawResponse","fetch","response","json","articles","addToWishList","article","console","log","userToken","showModal","closeModal","listArticles","map","i","display","justifyContent","width","margin","flexDirection","urlToImage","description","mapStateToProps","state","token","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Card, Icon, Modal} from 'antd';\r\nimport Nav from './Nav'\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction ScreenArticlesBySource(props) {\r\n\r\n  const idSource = props.match.params.id\r\n\r\n  const [articleList, setArticleList] = useState([]);\r\n\r\n  const [visible, setVisible] = useState(false); // Visibilité de la modal\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    async function loadArticles() {\r\n      // On interroge l'api pour récup la liste des sources\r\n      const rawResponse = await fetch(`https://newsapi.org/v2/top-headlines?sources=${idSource}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\r\n      const response = await rawResponse.json();\r\n      setArticleList(response.articles);\r\n\r\n    }\r\n    loadArticles();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  async function addToWishList(article){\r\n    console.log(props.userToken);\r\n    // console.log(JSON.stringify(article + props.userToken))\r\n    // var userData = JSON.stringify({\r\n    //   firstName: valeur du firstName (état ou props),\r\n    //   lastName: valeur du lastName (état ou props),\r\n    //   email: valeur de email (état ou props),\r\n    //   password: valeur de password (état ou props)\r\n    // });\r\n\r\n    // let data = await fetch('/add-article', {\r\n    //   method: 'POST',\r\n    //   headers: {'Content-Type':'application/Json'},\r\n    //   body: userData\r\n    // })\r\n    \r\n    props.addToWishList(article)\r\n  }\r\n\r\n  let showModal = (title, content) => {\r\n    setVisible(!visible);\r\n    setTitle(title);\r\n    setContent(content)\r\n  }\r\n\r\n  let closeModal = () => {\r\n    setVisible(!visible);\r\n  }\r\n\r\n  let listArticles = articleList.map((article, i) => {\r\n    return (\r\n      <div key={i} style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Card key={i}\r\n          style={{\r\n            width: 300,\r\n            margin: '15px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between'\r\n          }}\r\n          cover={\r\n            <img\r\n              alt={article.title}\r\n              src={article.urlToImage}\r\n            />\r\n          }\r\n          actions={[\r\n            <Icon onClick={()=>showModal(article.title, article.content)} type=\"read\" key=\"ellipsis2\" />,\r\n\r\n            <Icon onClick={()=>addToWishList(article)} type=\"like\" key=\"ellipsis\" />\r\n          ]}\r\n        >\r\n          <Meta\r\n            title={article.title}\r\n            description={article.description}\r\n          />\r\n\r\n        </Card>\r\n        <Modal\r\n          title={title}\r\n          visible={visible}\r\n          onOk={closeModal}\r\n          onCancel={closeModal}\r\n        >\r\n          <p>{content}</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Nav />\r\n\r\n      <div className=\"Banner\" />\r\n\r\n      <div className=\"Card\">\r\n\r\n        {listArticles}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { token: state.userToken }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    addToWishList: function(article){\r\n      dispatch( {type: 'addArticle', article: article } )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n )(ScreenArticlesBySource);\r\n"]},"metadata":{},"sourceType":"module"}
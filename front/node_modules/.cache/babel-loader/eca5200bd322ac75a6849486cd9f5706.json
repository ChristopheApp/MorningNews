{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totof\\\\Documents\\\\LaCapsule\\\\Semaine6-react\\\\MorningNews\\\\part4\\\\front\\\\src\\\\ScreenHome.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\n\nfunction ScreenHome(props) {\n  const [singUpUsername, setSingUpUsername] = useState('');\n  const [singUpEmail, setSingUpEmail] = useState('');\n  const [singUpPassword, setSingUpPassword] = useState('');\n  const [listErrorSignup, setErrorSignup] = useState([]);\n  const [singInEmail, setSingInEmail] = useState('');\n  const [singInPassword, setSingInPassword] = useState('');\n  const [listErrorSignin, setErrorSignin] = useState([]);\n  const [userExist, setUserExist] = useState(false);\n\n  let handleSubmitSignUp = async () => {\n    let data = await fetch('/sign-up', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `username=${singUpUsername}&email=${singUpEmail}&password=${singUpPassword}`\n    });\n    let response = await data.json();\n\n    if (response.result) {\n      setUserExist(true);\n      props.addToken(response.user.token);\n      props.loadLangue(response.user.langue);\n    } else setErrorSignup(response.error);\n  };\n\n  let handleSubmitSingIn = async () => {\n    let data = await fetch('/sign-in', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `email=${singInEmail}&password=${singInPassword}`\n    });\n    let response = await data.json();\n\n    if (response.result) {\n      setUserExist(true);\n      props.addToken(response.user.token);\n      props.loadLangue(response.user.langue);\n    } else setErrorSignin(response.error);\n  };\n\n  let tabErrorSignup = listErrorSignup.map((error, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, error);\n  });\n  let tabErrorSignin = listErrorSignin.map((error, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, error);\n  });\n  if (userExist) return React.createElement(Redirect, {\n    to: \"/screensource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"Login-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, tabErrorSignin, React.createElement(Input, {\n    className: \"Login-input\",\n    placeholder: \"arthur@lacapsule.com\",\n    onChange: e => setSingInEmail(e.target.value),\n    value: singInEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Input.Password, {\n    className: \"Login-input\",\n    placeholder: \"password\",\n    onChange: e => setSingInPassword(e.target.value),\n    value: singInPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => handleSubmitSingIn(),\n    style: {\n      width: '80px'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Sign-in\")), React.createElement(\"div\", {\n    className: \"Sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, tabErrorSignup, React.createElement(Input, {\n    className: \"Login-input\",\n    placeholder: \"Arthur G\",\n    onChange: e => setSingUpUsername(e.target.value),\n    value: singUpUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Input, {\n    className: \"Login-input\",\n    placeholder: \"arthur@lacapsule.com\",\n    onChange: e => setSingUpEmail(e.target.value),\n    value: singUpEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Input.Password, {\n    className: \"Login-input\",\n    placeholder: \"password\",\n    onChange: e => setSingUpPassword(e.target.value),\n    value: singUpPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => handleSubmitSignUp(),\n    style: {\n      width: '80px'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Sign-up\")));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    langue: state.langueCode\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToken: function (token) {\n      console.log(token);\n      dispatch({\n        type: 'addToken',\n        token: token\n      });\n    },\n    loadLangue: function (langue) {\n      dispatch({\n        type: 'changeLanguage',\n        langue: langue\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenHome);","map":{"version":3,"sources":["C:/Users/Totof/Documents/LaCapsule/Semaine6-react/MorningNews/part4/front/src/ScreenHome.js"],"names":["React","useState","Redirect","Input","Button","connect","ScreenHome","props","singUpUsername","setSingUpUsername","singUpEmail","setSingUpEmail","singUpPassword","setSingUpPassword","listErrorSignup","setErrorSignup","singInEmail","setSingInEmail","singInPassword","setSingInPassword","listErrorSignin","setErrorSignin","userExist","setUserExist","handleSubmitSignUp","data","fetch","method","headers","body","response","json","result","addToken","user","token","loadLangue","langue","error","handleSubmitSingIn","tabErrorSignup","map","i","tabErrorSignin","e","target","value","width","mapStateToProps","state","langueCode","mapDispatchToProps","dispatch","console","log","type"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Input,Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ScreenHome(props) {\r\n\r\n        const [singUpUsername, setSingUpUsername] = useState('');\r\n        const [singUpEmail, setSingUpEmail] = useState('');\r\n        const [singUpPassword, setSingUpPassword] = useState('');\r\n        const [listErrorSignup, setErrorSignup] = useState([]);\r\n\r\n        const [singInEmail, setSingInEmail] = useState('');\r\n        const [singInPassword, setSingInPassword] = useState('');\r\n        const [listErrorSignin, setErrorSignin] = useState([]);\r\n\r\n        const [userExist, setUserExist] = useState(false);\r\n\r\n        \r\n\r\n        let handleSubmitSignUp = async () => {\r\n                let data = await fetch('/sign-up', {\r\n                        method: 'POST',\r\n                        headers: {'Content-Type':'application/x-www-form-urlencoded'},\r\n                        body: `username=${singUpUsername}&email=${singUpEmail}&password=${singUpPassword}`\r\n                });\r\n                let response = await data.json();\r\n                \r\n\r\n                if (response.result){\r\n                        setUserExist(true);\r\n                        props.addToken(response.user.token);  \r\n                        props.loadLangue(response.user.langue);\r\n \r\n                }\r\n                        \r\n                else \r\n                        setErrorSignup(response.error);\r\n                \r\n\r\n                        \r\n                \r\n                \r\n        }\r\n\r\n        let handleSubmitSingIn = async () => {\r\n                let data = await fetch('/sign-in', {\r\n                        method: 'POST',\r\n                        headers: {'Content-Type':'application/x-www-form-urlencoded'},\r\n                        body: `email=${singInEmail}&password=${singInPassword}`\r\n                });\r\n                let response = await data.json();\r\n                \r\n\r\n                if(response.result){\r\n                        setUserExist(true);\r\n                        props.addToken(response.user.token);\r\n                        props.loadLangue(response.user.langue);\r\n                }\r\n                        \r\n                else \r\n                        setErrorSignin(response.error);\r\n                \r\n\r\n        }\r\n\r\n        let tabErrorSignup = listErrorSignup.map((error, i)=>{\r\n                return(<p key={i}>{error}</p>)\r\n        });\r\n\r\n        let tabErrorSignin = listErrorSignin.map((error, i)=>{\r\n                return(<p key={i}>{error}</p>)\r\n        });\r\n\r\n        if(userExist)\r\n                return <Redirect to='/screensource' />\r\n\r\n  return (\r\n    <div className=\"Login-page\" >\r\n\r\n          {/* SIGN-IN */}\r\n\r\n          <div className=\"Sign\">\r\n                  \r\n                  {tabErrorSignin}\r\n                  <Input className=\"Login-input\" placeholder=\"arthur@lacapsule.com\" onChange={e => setSingInEmail(e.target.value)} value={singInEmail} />\r\n\r\n                  <Input.Password className=\"Login-input\" placeholder=\"password\" onChange={e => setSingInPassword(e.target.value)} value={singInPassword} />\r\n            \r\n\r\n                  <Button onClick={()=> handleSubmitSingIn()} style={{width:'80px'}} type=\"primary\">Sign-in</Button>\r\n\r\n          </div>\r\n\r\n          {/* SIGN-UP */}\r\n\r\n          <div className=\"Sign\">\r\n                  \r\n                  {tabErrorSignup}\r\n                  <Input className=\"Login-input\" placeholder=\"Arthur G\" onChange={e => setSingUpUsername(e.target.value)} value={singUpUsername} />\r\n\r\n                  <Input className=\"Login-input\" placeholder=\"arthur@lacapsule.com\" onChange={e => setSingUpEmail(e.target.value)} value={singUpEmail} />\r\n\r\n                  <Input.Password className=\"Login-input\" placeholder=\"password\" onChange={e => setSingUpPassword(e.target.value)} value={singUpPassword} />\r\n            \r\n\r\n                  <Button onClick={()=> handleSubmitSignUp()} style={{width:'80px'}} type=\"primary\">Sign-up</Button>\r\n\r\n          </div>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n        return { langue: state.langueCode};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n        return {\r\n          addToken: function(token){\r\n                  console.log(token);\r\n            dispatch( {type: 'addToken', token: token } )\r\n          },\r\n          loadLangue: function(langue){\r\n                  dispatch({type: 'changeLanguage', langue: langue})\r\n          }\r\n        }\r\n      }\r\n\r\nexport default connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n )(ScreenHome); \r\n"]},"metadata":{},"sourceType":"module"}
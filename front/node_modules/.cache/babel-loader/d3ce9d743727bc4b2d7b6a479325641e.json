{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totof\\\\Documents\\\\LaCapsule\\\\Semaine6-react\\\\MorningNews\\\\part4\\\\front\\\\src\\\\ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\nimport { connect } from 'react-redux';\n\nfunction ScreenSource(props) {\n  const [sourceList, setSourceList] = useState([]);\n  const [langue, setLangue] = useState(props.language[0]);\n  useEffect(() => {\n    async function loadSource() {\n      // On interroge l'api pour récup la liste des sources\n      const rawResponse = await fetch(`https://newsapi.org/v2/sources?language=${props.language[0]}&country=${props.language[1]}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\n      const response = await rawResponse.json();\n      setSourceList(response.sources);\n    }\n\n    loadSource();\n    setLangue(props.language[0]);\n  }, [props.language]);\n  let selectFR;\n  let selectUK;\n\n  if (langue === 'fr') {\n    selectFR = {\n      border: \"5px solid #FFEFBF\"\n    };\n    selectUK = null;\n  } else if (langue === 'en') {\n    selectUK = {\n      border: \"5px solid #FFEFBF\"\n    };\n    selectFR = null;\n  }\n\n  console.log(props.language);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: selectFR,\n    className: \"Flag\",\n    src: \"images/flagFrance.png\",\n    alt: \"france\",\n    onClick: () => props.setLanguage(\"fr\", \"fr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: selectUK,\n    className: \"Flag\",\n    src: \"images/flagUK.png\",\n    alt: \"u-k\",\n    onClick: () => props.setLanguage(\"en\", \"us\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: (item, i) => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${item.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${item.id}`,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, item.name)),\n      description: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    language: state.langueCode\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setLanguage: function (langue, country) {\n      dispatch({\n        type: 'changeLanguage',\n        langue: [langue, country]\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenSource);","map":{"version":3,"sources":["C:/Users/Totof/Documents/LaCapsule/Semaine6-react/MorningNews/part4/front/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Nav","connect","ScreenSource","props","sourceList","setSourceList","langue","setLangue","language","loadSource","rawResponse","fetch","response","json","sources","selectFR","selectUK","border","console","log","setLanguage","item","i","category","id","name","description","mapStateToProps","state","langueCode","mapDispatchToProps","dispatch","country","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport { List, Avatar } from 'antd';\r\nimport Nav from './Nav'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ScreenSource(props) {\r\n\r\n\r\n\r\n  const [sourceList, setSourceList] = useState([]);\r\n  const [langue, setLangue] = useState(props.language[0]);\r\n\r\n  useEffect(() => {\r\n    async function loadSource() {\r\n      // On interroge l'api pour récup la liste des sources\r\n      const rawResponse = await fetch(`https://newsapi.org/v2/sources?language=${props.language[0]}&country=${props.language[1]}&apiKey=ab9c4b0f827c443dbc683714a21e9e38`);\r\n      const response = await rawResponse.json();\r\n      setSourceList(response.sources);\r\n\r\n    }\r\n    loadSource();\r\n    setLangue(props.language[0]);\r\n  }, [props.language]);\r\n\r\nlet selectFR;\r\nlet selectUK;\r\n\r\nif(langue === 'fr'){\r\n  selectFR = {border: \"5px solid #FFEFBF\"}\r\n  selectUK = null\r\n} else if (langue === 'en'){\r\n  selectUK = {border: \"5px solid #FFEFBF\"}\r\n  selectFR = null\r\n}\r\n\r\nconsole.log(props.language);\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\"Banner\">\r\n        <img style={selectFR} className=\"Flag\" src=\"images/flagFrance.png\" alt=\"france\" onClick={()=> props.setLanguage(\"fr\", \"fr\")} />\r\n        <img style={selectUK} className=\"Flag\" src=\"images/flagUK.png\" alt=\"u-k\" onClick={()=> props.setLanguage(\"en\", \"us\")} />\r\n      </div>\r\n\r\n      <div className=\"HomeThemes\">\r\n\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={sourceList}\r\n          renderItem={(item, i) => (\r\n                    <List.Item>\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={`/images/${item.category}.png`} />}\r\n                        title={<Link to={`/screenarticlesbysource/${item.id}`} key={i}><h3>{item.name}</h3></Link>}\r\n                        description={item.description}\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { language: state.langueCode }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    setLanguage: function(langue, country){\r\n      dispatch({type: 'changeLanguage', langue: [langue, country]})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenSource);\r\n"]},"metadata":{},"sourceType":"module"}
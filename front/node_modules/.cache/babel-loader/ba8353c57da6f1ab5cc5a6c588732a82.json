{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totof\\\\Documents\\\\LaCapsule\\\\Semaine6-react\\\\MorningNews\\\\part4\\\\front\\\\src\\\\ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  useEffect(() => {\n    async function loadSource() {\n      // On interroge l'api pour récup la liste des sources\n      const rawResponse = await fetch('https://newsapi.org/v2/sources?language=fr&country=fr&apiKey=ab9c4b0f827c443dbc683714a21e9e38');\n      const response = await rawResponse.json();\n      setSourceList(response.sources);\n    }\n\n    loadSource();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"flag\",\n    src: \"images/flagFrance.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"flag\",\n    src: \"images/flagUK.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: (item, i) => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${item.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${item.id}`,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, item.name)),\n      description: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["C:/Users/Totof/Documents/LaCapsule/Semaine6-react/MorningNews/part4/front/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Nav","ScreenSource","sourceList","setSourceList","loadSource","rawResponse","fetch","response","json","sources","item","i","category","id","name","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,YAAT,GAAwB;AAItB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,UAAf,GAA4B;AAC1B;AACA,YAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,+FAAD,CAA/B;AACA,YAAMC,QAAQ,GAAG,MAAMF,WAAW,CAACG,IAAZ,EAAvB;AACAL,MAAAA,aAAa,CAACI,QAAQ,CAACE,OAAV,CAAb;AAED;;AACDL,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAC,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAC,YADb;AAEE,IAAA,UAAU,EAAEF,UAFd;AAGE,IAAA,UAAU,EAAE,CAACQ,IAAD,EAAOC,CAAP,KACF,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAG,WAAUD,IAAI,CAACE,QAAS,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,2BAA0BF,IAAI,CAACG,EAAG,EAA7C;AAAgD,QAAA,GAAG,EAAEF,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACI,IAAV,CAAxD,CAFT;AAGE,MAAA,WAAW,EAAEJ,IAAI,CAACK,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADF;AA8BD;;AAED,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport { List, Avatar } from 'antd';\r\nimport Nav from './Nav'\r\n\r\nfunction ScreenSource() {\r\n\r\n\r\n\r\n  const [sourceList, setSourceList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadSource() {\r\n      // On interroge l'api pour récup la liste des sources\r\n      const rawResponse = await fetch('https://newsapi.org/v2/sources?language=fr&country=fr&apiKey=ab9c4b0f827c443dbc683714a21e9e38');\r\n      const response = await rawResponse.json();\r\n      setSourceList(response.sources);\r\n\r\n    }\r\n    loadSource();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\"Banner\">\r\n        <img className=\"flag\" src=\"images/flagFrance.png\" />\r\n        <img className=\"flag\" src=\"images/flagUK.png\" />\r\n      </div>\r\n\r\n      <div className=\"HomeThemes\">\r\n\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={sourceList}\r\n          renderItem={(item, i) => (\r\n                    <List.Item>\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={`/images/${item.category}.png`} />}\r\n                        title={<Link to={`/screenarticlesbysource/${item.id}`} key={i}><h3>{item.name}</h3></Link>}\r\n                        description={item.description}\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenSource;\r\n"]},"metadata":{},"sourceType":"module"}